import org.moallemi.gradle.internal.VersionCodeType

apply plugin: 'com.android.application'
apply plugin: 'org.moallemi.advanced-build-version'

advancedVersioning {
    nameOptions {
        versionPatch versionCode
    }
    codeOptions {
        versionCodeType VersionCodeType.AUTO_INCREMENT_ONE_STEP
        dependsOnTasks 'assemble'
    }
    outputOptions {
        renameOutput false
        nameFormat 'Transformer-${buildType}-${versionName}'
    }
}

def appVersionName = advancedVersioning.versionName
def appVersionCode = advancedVersioning.versionCode
def keyStore = file('transformer.keystore')

android {
    compileSdkVersion 24
    buildToolsVersion gradle.buildToolsVersion

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "me.drakeet.transformer"
        minSdkVersion 14
        targetSdkVersion 24
        versionCode appVersionCode
        versionName appVersionName
        jackOptions {
            enabled true
        }
    }

    signingConfigs {
        app {
            storeFile file('transformer.keystore')
            storePassword project.hasProperty('STOREPASS') ? STOREPASS : ''
            keyAlias project.hasProperty('KEYALIAS') ? KEYALIAS : ''
            keyPassword project.hasProperty('KEYPASS') ? KEYPASS : ''
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            debuggable true
            applicationIdSuffix ".debug"
        }

        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (keyStore.exists()) {
                println "transformer: using drakeet's key"
                signingConfig signingConfigs.app
            } else {
                println "transformer: using default key"
                signingConfig signingConfigs.debug
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':timemachine')
    compile "com.android.support:appcompat-v7:$gradle.supportLibraryVersion"
    compile "com.android.support:design:$gradle.supportLibraryVersion"
    compile "com.google.android.agera:agera:$gradle.ageraVersion"
    compile "com.google.android.agera:database:$gradle.ageraVersion"
    compile "com.google.android.agera:net:$gradle.ageraVersion"
    compile "com.google.android.agera:content:$gradle.ageraVersion"
    compile 'me.drakeet.agera:bus:1.0.0'
    compile 'com.google.code.gson:gson:2.7'
    debugCompile "com.squareup.leakcanary:leakcanary-android:$gradle.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$gradle.leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$gradle.leakCanaryVersion"
    debugCompile 'me.drakeet.library:crashwoodpecker:1.1.1'
    releaseCompile 'me.drakeet.library:crashwoodpecker-do-nothing:1.1.1'
    testCompile 'me.drakeet.library:crashwoodpecker-do-nothing:1.1.1'
}
